generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  createdAt      DateTime        @default(now())
  firstName      String
  introduction   String?
  lastName       String
  password       String
  updatedAt      DateTime        @updatedAt
  badges         Badge[]
  certifications Certification[]
  contracts      Contract?
  image          Image?
  projects       Project[]
}

model Contract {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  image     Image?
}

model Certification {
  id        Int      @id @default(autoincrement())
  name      String
  authority String
  licenseNo String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  image     Image?

  @@index([userId], map: "Certification_userId_fkey")
}

model Badge {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  image     Image?

  @@index([userId], map: "Badge_userId_fkey")
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  images      Image[]
  user        User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "Project_userId_fkey")
}

model Image {
  id              Int            @id @default(autoincrement())
  url             String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  projectId       Int?
  badgeId         Int?           @unique
  certificationId Int?           @unique
  profileId       Int?           @unique
  contractId      Int?           @unique
  userId          Int?           @unique
  badge           Badge?         @relation(fields: [badgeId], references: [id])
  certification   Certification? @relation(fields: [certificationId], references: [id])
  contract        Contract?      @relation(fields: [contractId], references: [id])
  project         Project?       @relation(fields: [projectId], references: [id])
  user            User?          @relation(fields: [userId], references: [id])

  @@index([projectId], map: "Image_projectId_fkey")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
